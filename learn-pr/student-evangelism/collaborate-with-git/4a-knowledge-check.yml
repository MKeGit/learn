### YamlMime:ModuleUnit
uid: learn.student-evangelism.collaborate-with-git.4a-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Review what you've learned in the Collaborate with Git module.
  ms.date: 03/14/2021
  author: softchris
  ms.author: chnoring
  ms.topic: unit
  ms.custom: team=nextgen
durationInMinutes: 5      
content: |
quiz:
  questions:
  - content: 'What is the primary advantage of the distributed nature of Git?'
    choices:
    - content: "Git automatically merges saved changes from multiple remote authors into a single project repo."
      isCorrect: false
      explanation: "Incorrect. Multiple authors in different locations can work together on a project by using Git, but merging changes isn't automatic. Each contributor should use the commands supplied in Git to verify incoming changes before merging the changes with their own work."    
    - content: "Multiple remote contributors can work together on a project without fear of overwriting each other's work. Contributors can check changes from another contributor before merging them with their own."
      isCorrect: true
      explanation: "Correct! The distributed nature of Git helps all contributors ensure and maintain the validity of the project content."            
    - content: "Git distributes files and a folder structure to each contributor's machine across a wide-area network for safe keeping. This architecture provides highly secure data storage and ensures that project repo data can't be corrupted."
      isCorrect: false
      explanation: "Incorrect. The Git platform is cloud-based, which enables global participation and ensures the safest data storage via authenticated access."
  - content: 'When a Git user copies a repository, what term describes the reference that Git sets up for the original repository?'
    choices:
    - content: "origin"
      isCorrect: false
      explanation: "Incorrect. Git uses the name `origin` to refer to the original repository, but that's not the reference itself."
    - content: "repo"
      isCorrect: false
      explanation: "Incorrect. The term \"repo\" is just an abbreviation for *repository*."
    - content: "remote"
      isCorrect: true
      explanation: "Correct! When you clone (copy) a repository, Git creates a reference to the original repo called a \"remote\". Git uses the name \"origin\" to refer to the remote repo."
  - content: 'What Git command makes a copy of an existing repository?'
    choices:
    - content: "`git clone <repo-name>`"
      isCorrect: false
      explanation: "Incorrect. The `git clone` command takes a different parameter as input. Review the description in the [second unit](./1-collaborate-using-pull.yml?azure-portal=true)."
    - content: "`git clone <repo-path>`"
      isCorrect: true
      explanation: "Correct! The `git clone` command takes a URL or path to an existing repository as a parameter."
    - content: "`git copy <repo-name>`"
      isCorrect: false
      explanation: "Incorrect. This command isn't recognized in Git."
  - content: 'What Git command can be used to save current changes, but without using a pull request?'
    choices:
    - content: "`git stash`"
      isCorrect: true
      explanation: "Correct! The `git stash` command saves the state of the working tree and index by making a couple temporary commits. This type of save process doesn't affect the repository history."
    - content: "`git save`"
      isCorrect: false
      explanation: "Incorrect. This command isn't recognized in Git."
    - content: "`git store`"
      isCorrect: false
      explanation: "Incorrect. This command isn't recognized in Git."
  - content: 'Suppose you have a project that has 10 files in your local working branch of the repo. You recently updated 3 of the files: *toc.yml*, *intro.txt*, and *exercise.json*. Now, you want to create a pull request for only the changes to the JSON file. What set of Git commands should you use to create the pull request for only those changes?'
    choices:
    - content: "`git add .` <br /> `git commit -m \"my changes for the exercise\"` <br /> `git push origin <working-branch>` <br /><br />"
      isCorrect: false
      explanation: "Incorrect. Check the syntax for the `git add` command. The parameter `.` causes all changes that aren't yet committed (or stashed) to be included in the pull request. How can you modify the syntax so that only the file you want to include is added?"
    - content: "`git add exercise.json` <br /> `git commit -m \"my changes for the exercise\"` <br /> `git push origin <working-branch>` <br /><br />"
      isCorrect: true
      explanation: "Correct! To push all your current changes, specify `.` after `git add`. To push changes for only one file, enter the specific file name."
    - content: "`git add exercise` <br /> `git commit -m \"my changes for the exercise\"` <br /> `git push remote <working-branch>` <br /><br />"
      isCorrect: false
      explanation: "Incorrect. Check the syntax for the `git add` and `git push` commands. For the `git add` command, be sure to specify the full file name with the extension type (`exercise.json`). For the `git push` command, supply the name of the remote (`origin`) rather than the reference (`remote`)."  
  